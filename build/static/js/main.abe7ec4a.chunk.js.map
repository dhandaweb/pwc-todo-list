{"version":3,"sources":["Components/Header/index.js","Components/Footer/index.js","Components/Main/Todoitems/index.js","Components/Main/Sortitems/index.js","Components/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","position","color","aria-label","variant","React","Component","Footer","style","boxShadow","background","align","href","Todoitems","priorityList","priorityListColor","component","height","overflowY","this","list","length","map","d","i","key","id","isEditing","control","checked","completed","onChange","e","target","updatelist","value","label","priority","className","ref","onSubmit","onError","errors","console","log","placeholder","validators","errorMessages","margin","select","option","type","float","fontSize","onClick","deleteOption","Sortitems","selectedPriority","updatePriority","Main","bind","updateSelectedPriority","item","push","setState","deletedItem","filter","sortIndex","sort","a","b","toLowerCase","justify","container","spacing","noWrap","xl","lg","md","sm","xs","gutterBottom","handleSubmit","InputLabelProps","shrink","size","App","direction","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abe7ec4a.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/BookmarkBorder';\r\n\r\n\r\nexport default class Header extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton color=\"inherit\" aria-label=\"Menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" color=\"inherit\" >\r\n          PwC Technical Challenge\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <AppBar position=\"static\" color=\"default\" style={{boxShadow:\"none\",background:\"#fff\"}}>\r\n        <Toolbar>\r\n          <Typography variant=\"body1\" align=\"center\" color=\"inherit\" >\r\n          Developed by : <Link href=\" http://dharminder.dhanda.com.au/\" >\r\n          Dharminder Dhanda | Senior full stack developer\r\n       </Link>\r\n      \r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckIcon from '@material-ui/icons/CheckCircle';\r\n\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nexport default class Todoitems extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n     \r\n    }\r\n    this.priorityList = [\"low\",\"medium\",\"high\"];\r\n    this.priorityListColor = {\"low\":\"basic\",\"medium\":\"primary\",\"high\":\"secondary\"};\r\n  }\r\n\r\n\r\n  render() {\r\n   \r\n    return (<List component=\"nav\" style={{height:300, overflowY:'auto'}}> {\r\n              this.props.list.length > 0 && \r\n              this.props.list.map((d,i) => {\r\n                return <div key={d.id + i}>\r\n                      <ListItem>\r\n                     \r\n                        {!d.isEditing &&\r\n                           <div>\r\n                             <FormControlLabel\r\n                           control={\r\n                             <Checkbox checked={d.completed}  onChange={(e) => {\r\n                              d.completed = e.target.checked;\r\n                              this.props.updatelist(this.props.list);\r\n                            }} value={d.label} />\r\n                           }\r\n                           label={d.label}\r\n                         ></FormControlLabel>\r\n                             <Chip label={d.priority} \r\n                              color={this.priorityListColor[d.priority]}\r\n                              />\r\n                             </div>} \r\n\r\n                        {d.isEditing &&\r\n                          <ValidatorForm\r\n                          className=\"formFullWidth\"\r\n                          ref=\"form\"\r\n                          onSubmit={(e) => { \r\n                             d.isEditing = false;\r\n                             this.props.updatelist(this.props.list);\r\n                           }}\r\n                          onError={errors => console.log(errors)}\r\n                          >\r\n                          <TextValidator\r\n                            value={d.label} \r\n                            label=\"Name\"\r\n                            placeholder=\"Add item name\"\r\n                            validators={['required']}\r\n                            errorMessages={['value is required']}\r\n                            onChange={(e) => {\r\n                              d.label = e.target.value;\r\n                              this.props.updatelist(this.props.list);\r\n                            }}\r\n                            margin=\"normal\">\r\n                          </TextValidator>\r\n\r\n                          <TextValidator\r\n                            id=\"Priority\"\r\n                            select\r\n                            label=\"Priority\"\r\n                            value={d.priority}\r\n                            validators={['required']}\r\n                            errorMessages={['Priority is required']}\r\n                            onChange={(e) => {\r\n                              d.priority = e.target.value;\r\n                              this.props.updatelist(this.props.list);\r\n                            }}\r\n                            margin=\"normal\">\r\n                            {this.priorityList.map(option => (\r\n                              <MenuItem key={option} value={option}>\r\n                                {option}\r\n                              </MenuItem>\r\n                            ))}\r\n                        </TextValidator>\r\n                \r\n                          <IconButton type=\"submit\" style={{float:\"right\", margin:12}}>\r\n                           <CheckIcon fontSize=\"inherit\" />\r\n                          </IconButton>\r\n                      \r\n\r\n                          </ValidatorForm>\r\n                        }\r\n\r\n                        {!d.isEditing &&\r\n                        <Edit className=\"editIcon\" onClick={() => { \r\n                         d.isEditing = !d.isEditing;\r\n                         this.props.updatelist(this.props.list);\r\n                        }}/>\r\n                       }\r\n\r\n                        <DeleteIcon className=\"trashIcon\" onClick={(e) => { \r\n                          this.props.deleteOption(d);\r\n                          }}/>\r\n                        </ListItem>\r\n                      <Divider />\r\n                </div>\r\n              })\r\n            }\r\n            </List>\r\n          );\r\n  }\r\n};","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport default class Sortitems extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n    }\r\n\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n   \r\n    return ( <FormControl> \r\n      \r\n       <Select\r\n      id=\"sort\"\r\n      value={this.props.selectedPriority}\r\n      onChange={(e)=>{\r\n        console.log(e.target.value);\r\n        this.props.updatePriority(e.target.value);\r\n        }\r\n      }\r\n    >\r\n      <MenuItem value={'Priority'}>Priority</MenuItem>\r\n      <MenuItem value={'Name'}>Name</MenuItem>\r\n      <MenuItem value={'PriorityName'}>Priority & Name</MenuItem>\r\n    </Select> \r\n      </FormControl>\r\n          );\r\n  }\r\n};","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Todoitems from './Todoitems';\r\nimport Sortitems from './Sortitems';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nexport default class Main extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteOption = this.deleteOption.bind(this);\r\n    this.updatelist = this.updatelist.bind(this);\r\n    this.updatePriority = this.updatePriority.bind(this);\r\n    this.updateSelectedPriority = this.updateSelectedPriority.bind(this);\r\n\r\n    this.state = {\r\n      list: [{ id: \"Item 1\", isEditing: false, completed: false, label: \"Item 1\", priority: \"high\" }],\r\n      item: \"\",\r\n      priority: \"low\",\r\n      selectedPriority: \"PriorityName\"\r\n    }\r\n\r\n    this.priorityList = [\"low\", \"medium\", \"high\"];\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.state.list.push({ id: this.state.item, isEditing: false, completed: false, label: this.state.item, priority: this.state.priority });\r\n    this.setState({ list: this.state.list, item: \"\", priority: \"low\" }, () => {\r\n      this.updatePriority();\r\n    });\r\n  }\r\n\r\n  deleteOption(deletedItem) {\r\n    this.setState({ list: this.state.list.filter(item => item.id !== deletedItem.id) }, () => {\r\n      this.updatePriority();\r\n    });\r\n  }\r\n\r\n  updatelist(list) {\r\n    this.setState({ list: list }, () => {\r\n      this.updatePriority();\r\n    });\r\n  }\r\n\r\n  updateSelectedPriority(priority) {\r\n    this.setState({ selectedPriority: priority }, () => {\r\n      this.updatePriority();\r\n    });\r\n  }\r\n\r\n  updatePriority() {\r\n\r\n    var sortIndex = {\r\n      \"low\": 3,\r\n      \"medium\": 2,\r\n      \"high\": 1\r\n    };\r\n\r\n    switch (this.state.selectedPriority) {\r\n      case \"Priority\":\r\n        this.state.list = this.state.list.sort(function (a, b) {\r\n          return sortIndex[a.priority] - sortIndex[b.priority];\r\n        })\r\n        break;\r\n\r\n      case \"Name\":\r\n        this.state.list = this.state.list.sort(function (a, b) {\r\n          if (a.label.toLowerCase() < b.label.toLowerCase()) { return -1; }\r\n          if (a.label.toLowerCase() > b.label.toLowerCase()) { return 1; }\r\n          return 0;\r\n        });\r\n\r\n        break;\r\n\r\n      case \"PriorityName\":\r\n        this.state.list = this.state.list.sort(function (a, b) {\r\n          if (a.label.toLowerCase() < b.label.toLowerCase()) { return -1; }\r\n          if (a.label.toLowerCase() > b.label.toLowerCase()) { return 1; }\r\n          return 0;\r\n        });\r\n        this.state.list = this.state.list.sort(function (a, b) {\r\n          return sortIndex[a.priority] - sortIndex[b.priority];\r\n        });\r\n\r\n        break;\r\n      default:\r\n        this.state.list = this.state.list.sort(function (a, b) {\r\n          return sortIndex[a.priority] - sortIndex[b.priority];\r\n        });\r\n        break;\r\n    }\r\n\r\n    this.setState({ list: this.state.list });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<div className=\"main\" >\r\n      <Grid justify=\"center\" container spacing={24} className=\"mainContent\">\r\n        <div className=\"subHeading\">\r\n          <MenuIcon className=\"dashboard\" />\r\n          <Typography className=\"title\" variant=\"subtitle1\" noWrap> To-do list</Typography>\r\n        </div>\r\n\r\n        <Grid item xl={4} lg={4} md={6} sm={6} xs={12}>\r\n          <Card >\r\n            <CardContent>\r\n\r\n              <Typography color=\"textSecondary\" gutterBottom> Please type to-do list item and select priority.</Typography>\r\n              <Typography color=\"textSecondary\" gutterBottom> Check item to mark it as complete.</Typography>\r\n\r\n              <ValidatorForm\r\n                ref=\"form\"\r\n                onSubmit={(e) => { this.handleSubmit() }}\r\n                onError={errors => console.log(errors)}\r\n              >\r\n                <TextValidator\r\n                  label=\"Name\"\r\n                  placeholder=\"Add item name\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={this.state.item}\r\n                  validators={['required']}\r\n                  errorMessages={['Item name is required']}\r\n                  onChange={(e) => {\r\n                    this.setState({ item: e.target.value })\r\n                  }}\r\n                  margin=\"normal\">\r\n                </TextValidator>\r\n\r\n                <TextValidator\r\n                  id=\"Priority\"\r\n                  select\r\n                  label=\"Priority\"\r\n                  value={this.state.priority}\r\n                  validators={['required']}\r\n                  errorMessages={['Priority is required']}\r\n\r\n                  onChange={(e) => this.setState({ priority: e.target.value })}\r\n                  margin=\"normal\">\r\n                  {this.priorityList.map(option => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextValidator>\r\n\r\n                <Button variant=\"contained\" type=\"submit\" color=\"primary\" style={{ float: \"right\", margin: 18 }}>   Add  </Button>\r\n              </ValidatorForm>\r\n\r\n\r\n              <Todoitems list={this.state.list} deleteOption={this.deleteOption} updatelist={this.updatelist}></Todoitems>\r\n\r\n            </CardContent>\r\n\r\n            <CardActions>\r\n\r\n              <Button size=\"small\" color=\"primary\">\r\n                {this.state.list.filter(d => d.completed).length} completed\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                {this.state.list.length} total\r\n              </Button>\r\n\r\n              <Typography variant=\"subtitle2\" gutterBottom>\r\n                Sort by:\r\n      </Typography>\r\n              <Sortitems selectedPriority={this.state.selectedPriority} updatePriority={this.updateSelectedPriority}></Sortitems>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </div>);\r\n  }\r\n};","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Main from './Components/Main';\nimport Grid from '@material-ui/core/Grid';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Grid container direction=\"row-reverse\" justify=\"space-evenly\" >\n        <Main/>\n      </Grid>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}